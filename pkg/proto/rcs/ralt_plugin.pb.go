// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ralt_plugin.proto

package rcs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OperResult struct {
	RetCode              int32    `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`
	RetMsg               string   `protobuf:"bytes,2,opt,name=ret_msg,json=retMsg,proto3" json:"ret_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperResult) Reset()         { *m = OperResult{} }
func (m *OperResult) String() string { return proto.CompactTextString(m) }
func (*OperResult) ProtoMessage()    {}
func (*OperResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{0}
}

func (m *OperResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperResult.Unmarshal(m, b)
}
func (m *OperResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperResult.Marshal(b, m, deterministic)
}
func (m *OperResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperResult.Merge(m, src)
}
func (m *OperResult) XXX_Size() int {
	return xxx_messageInfo_OperResult.Size(m)
}
func (m *OperResult) XXX_DiscardUnknown() {
	xxx_messageInfo_OperResult.DiscardUnknown(m)
}

var xxx_messageInfo_OperResult proto.InternalMessageInfo

func (m *OperResult) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *OperResult) GetRetMsg() string {
	if m != nil {
		return m.RetMsg
	}
	return ""
}

type NULLMsgReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NULLMsgReq) Reset()         { *m = NULLMsgReq{} }
func (m *NULLMsgReq) String() string { return proto.CompactTextString(m) }
func (*NULLMsgReq) ProtoMessage()    {}
func (*NULLMsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{1}
}

func (m *NULLMsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NULLMsgReq.Unmarshal(m, b)
}
func (m *NULLMsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NULLMsgReq.Marshal(b, m, deterministic)
}
func (m *NULLMsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NULLMsgReq.Merge(m, src)
}
func (m *NULLMsgReq) XXX_Size() int {
	return xxx_messageInfo_NULLMsgReq.Size(m)
}
func (m *NULLMsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NULLMsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_NULLMsgReq proto.InternalMessageInfo

type NoArgReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoArgReq) Reset()         { *m = NoArgReq{} }
func (m *NoArgReq) String() string { return proto.CompactTextString(m) }
func (*NoArgReq) ProtoMessage()    {}
func (*NoArgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{2}
}

func (m *NoArgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoArgReq.Unmarshal(m, b)
}
func (m *NoArgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoArgReq.Marshal(b, m, deterministic)
}
func (m *NoArgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoArgReq.Merge(m, src)
}
func (m *NoArgReq) XXX_Size() int {
	return xxx_messageInfo_NoArgReq.Size(m)
}
func (m *NoArgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_NoArgReq.DiscardUnknown(m)
}

var xxx_messageInfo_NoArgReq proto.InternalMessageInfo

type OptRaltGroupReq struct {
	Iopt                     int32             `protobuf:"varint,1,opt,name=iopt,proto3" json:"iopt,omitempty"`
	StrgroupId               string            `protobuf:"bytes,2,opt,name=strgroup_id,json=strgroupId,proto3" json:"strgroup_id,omitempty"`
	StrgroupName             string            `protobuf:"bytes,3,opt,name=strgroup_name,json=strgroupName,proto3" json:"strgroup_name,omitempty"`
	StrgroupHrefDomain       string            `protobuf:"bytes,4,opt,name=strgroup_href_domain,json=strgroupHrefDomain,proto3" json:"strgroup_href_domain,omitempty"`
	StrgroupHrefDomainIpAddr string            `protobuf:"bytes,5,opt,name=strgroup_href_domain_ip_addr,json=strgroupHrefDomainIpAddr,proto3" json:"strgroup_href_domain_ip_addr,omitempty"`
	ItransformMod            int32             `protobuf:"varint,6,opt,name=itransform_mod,json=itransformMod,proto3" json:"itransform_mod,omitempty"`
	ImaxSession              int32             `protobuf:"varint,7,opt,name=imax_session,json=imaxSession,proto3" json:"imax_session,omitempty"`
	StrclusterId             string            `protobuf:"bytes,8,opt,name=strcluster_id,json=strclusterId,proto3" json:"strcluster_id,omitempty"`
	FuncSwitcher             *FuncSwitcherInfo `protobuf:"bytes,9,opt,name=func_switcher,json=funcSwitcher,proto3" json:"func_switcher,omitempty"`
	Rule                     []*RuleInfo       `protobuf:"bytes,10,rep,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}          `json:"-"`
	XXX_unrecognized         []byte            `json:"-"`
	XXX_sizecache            int32             `json:"-"`
}

func (m *OptRaltGroupReq) Reset()         { *m = OptRaltGroupReq{} }
func (m *OptRaltGroupReq) String() string { return proto.CompactTextString(m) }
func (*OptRaltGroupReq) ProtoMessage()    {}
func (*OptRaltGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{3}
}

func (m *OptRaltGroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptRaltGroupReq.Unmarshal(m, b)
}
func (m *OptRaltGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptRaltGroupReq.Marshal(b, m, deterministic)
}
func (m *OptRaltGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptRaltGroupReq.Merge(m, src)
}
func (m *OptRaltGroupReq) XXX_Size() int {
	return xxx_messageInfo_OptRaltGroupReq.Size(m)
}
func (m *OptRaltGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OptRaltGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_OptRaltGroupReq proto.InternalMessageInfo

func (m *OptRaltGroupReq) GetIopt() int32 {
	if m != nil {
		return m.Iopt
	}
	return 0
}

func (m *OptRaltGroupReq) GetStrgroupId() string {
	if m != nil {
		return m.StrgroupId
	}
	return ""
}

func (m *OptRaltGroupReq) GetStrgroupName() string {
	if m != nil {
		return m.StrgroupName
	}
	return ""
}

func (m *OptRaltGroupReq) GetStrgroupHrefDomain() string {
	if m != nil {
		return m.StrgroupHrefDomain
	}
	return ""
}

func (m *OptRaltGroupReq) GetStrgroupHrefDomainIpAddr() string {
	if m != nil {
		return m.StrgroupHrefDomainIpAddr
	}
	return ""
}

func (m *OptRaltGroupReq) GetItransformMod() int32 {
	if m != nil {
		return m.ItransformMod
	}
	return 0
}

func (m *OptRaltGroupReq) GetImaxSession() int32 {
	if m != nil {
		return m.ImaxSession
	}
	return 0
}

func (m *OptRaltGroupReq) GetStrclusterId() string {
	if m != nil {
		return m.StrclusterId
	}
	return ""
}

func (m *OptRaltGroupReq) GetFuncSwitcher() *FuncSwitcherInfo {
	if m != nil {
		return m.FuncSwitcher
	}
	return nil
}

func (m *OptRaltGroupReq) GetRule() []*RuleInfo {
	if m != nil {
		return m.Rule
	}
	return nil
}

type GetRaltGroupReq struct {
	StrgroupId           string   `protobuf:"bytes,1,opt,name=strgroup_id,json=strgroupId,proto3" json:"strgroup_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRaltGroupReq) Reset()         { *m = GetRaltGroupReq{} }
func (m *GetRaltGroupReq) String() string { return proto.CompactTextString(m) }
func (*GetRaltGroupReq) ProtoMessage()    {}
func (*GetRaltGroupReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{4}
}

func (m *GetRaltGroupReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRaltGroupReq.Unmarshal(m, b)
}
func (m *GetRaltGroupReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRaltGroupReq.Marshal(b, m, deterministic)
}
func (m *GetRaltGroupReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRaltGroupReq.Merge(m, src)
}
func (m *GetRaltGroupReq) XXX_Size() int {
	return xxx_messageInfo_GetRaltGroupReq.Size(m)
}
func (m *GetRaltGroupReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRaltGroupReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRaltGroupReq proto.InternalMessageInfo

func (m *GetRaltGroupReq) GetStrgroupId() string {
	if m != nil {
		return m.StrgroupId
	}
	return ""
}

type GroupInfo struct {
	StrgroupId               string            `protobuf:"bytes,1,opt,name=strgroup_id,json=strgroupId,proto3" json:"strgroup_id,omitempty"`
	StrgroupName             string            `protobuf:"bytes,2,opt,name=strgroup_name,json=strgroupName,proto3" json:"strgroup_name,omitempty"`
	IwebsiteNum              int32             `protobuf:"varint,3,opt,name=iwebsite_num,json=iwebsiteNum,proto3" json:"iwebsite_num,omitempty"`
	StrclusterId             string            `protobuf:"bytes,4,opt,name=strcluster_id,json=strclusterId,proto3" json:"strcluster_id,omitempty"`
	ItransformMod            int32             `protobuf:"varint,5,opt,name=itransform_mod,json=itransformMod,proto3" json:"itransform_mod,omitempty"`
	StrgroupHrefDomain       string            `protobuf:"bytes,6,opt,name=strgroup_href_domain,json=strgroupHrefDomain,proto3" json:"strgroup_href_domain,omitempty"`
	StrgroupHrefDomainIpAddr string            `protobuf:"bytes,7,opt,name=strgroup_href_domain_ip_addr,json=strgroupHrefDomainIpAddr,proto3" json:"strgroup_href_domain_ip_addr,omitempty"`
	ImaxSession              int32             `protobuf:"varint,8,opt,name=imax_session,json=imaxSession,proto3" json:"imax_session,omitempty"`
	FuncSwitcher             *FuncSwitcherInfo `protobuf:"bytes,9,opt,name=func_switcher,json=funcSwitcher,proto3" json:"func_switcher,omitempty"`
	Rule                     []*RuleInfo       `protobuf:"bytes,10,rep,name=rule,proto3" json:"rule,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}          `json:"-"`
	XXX_unrecognized         []byte            `json:"-"`
	XXX_sizecache            int32             `json:"-"`
}

func (m *GroupInfo) Reset()         { *m = GroupInfo{} }
func (m *GroupInfo) String() string { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()    {}
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{5}
}

func (m *GroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GroupInfo.Unmarshal(m, b)
}
func (m *GroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GroupInfo.Marshal(b, m, deterministic)
}
func (m *GroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInfo.Merge(m, src)
}
func (m *GroupInfo) XXX_Size() int {
	return xxx_messageInfo_GroupInfo.Size(m)
}
func (m *GroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInfo proto.InternalMessageInfo

func (m *GroupInfo) GetStrgroupId() string {
	if m != nil {
		return m.StrgroupId
	}
	return ""
}

func (m *GroupInfo) GetStrgroupName() string {
	if m != nil {
		return m.StrgroupName
	}
	return ""
}

func (m *GroupInfo) GetIwebsiteNum() int32 {
	if m != nil {
		return m.IwebsiteNum
	}
	return 0
}

func (m *GroupInfo) GetStrclusterId() string {
	if m != nil {
		return m.StrclusterId
	}
	return ""
}

func (m *GroupInfo) GetItransformMod() int32 {
	if m != nil {
		return m.ItransformMod
	}
	return 0
}

func (m *GroupInfo) GetStrgroupHrefDomain() string {
	if m != nil {
		return m.StrgroupHrefDomain
	}
	return ""
}

func (m *GroupInfo) GetStrgroupHrefDomainIpAddr() string {
	if m != nil {
		return m.StrgroupHrefDomainIpAddr
	}
	return ""
}

func (m *GroupInfo) GetImaxSession() int32 {
	if m != nil {
		return m.ImaxSession
	}
	return 0
}

func (m *GroupInfo) GetFuncSwitcher() *FuncSwitcherInfo {
	if m != nil {
		return m.FuncSwitcher
	}
	return nil
}

func (m *GroupInfo) GetRule() []*RuleInfo {
	if m != nil {
		return m.Rule
	}
	return nil
}

type GetRaltGroupRsp struct {
	GroupList            []*GroupInfo `protobuf:"bytes,1,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetRaltGroupRsp) Reset()         { *m = GetRaltGroupRsp{} }
func (m *GetRaltGroupRsp) String() string { return proto.CompactTextString(m) }
func (*GetRaltGroupRsp) ProtoMessage()    {}
func (*GetRaltGroupRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{6}
}

func (m *GetRaltGroupRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRaltGroupRsp.Unmarshal(m, b)
}
func (m *GetRaltGroupRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRaltGroupRsp.Marshal(b, m, deterministic)
}
func (m *GetRaltGroupRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRaltGroupRsp.Merge(m, src)
}
func (m *GetRaltGroupRsp) XXX_Size() int {
	return xxx_messageInfo_GetRaltGroupRsp.Size(m)
}
func (m *GetRaltGroupRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRaltGroupRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRaltGroupRsp proto.InternalMessageInfo

func (m *GetRaltGroupRsp) GetGroupList() []*GroupInfo {
	if m != nil {
		return m.GroupList
	}
	return nil
}

type ProtocolMap struct {
	StrprotocolMapId     string   `protobuf:"bytes,1,opt,name=strprotocol_map_id,json=strprotocolMapId,proto3" json:"strprotocol_map_id,omitempty"`
	StrsrcProtocol       string   `protobuf:"bytes,2,opt,name=strsrc_protocol,json=strsrcProtocol,proto3" json:"strsrc_protocol,omitempty"`
	IsrcPort             int32    `protobuf:"varint,3,opt,name=isrc_port,json=isrcPort,proto3" json:"isrc_port,omitempty"`
	StrdstProtocol       string   `protobuf:"bytes,4,opt,name=strdst_protocol,json=strdstProtocol,proto3" json:"strdst_protocol,omitempty"`
	IdstPort             int32    `protobuf:"varint,5,opt,name=idst_port,json=idstPort,proto3" json:"idst_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtocolMap) Reset()         { *m = ProtocolMap{} }
func (m *ProtocolMap) String() string { return proto.CompactTextString(m) }
func (*ProtocolMap) ProtoMessage()    {}
func (*ProtocolMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{7}
}

func (m *ProtocolMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtocolMap.Unmarshal(m, b)
}
func (m *ProtocolMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtocolMap.Marshal(b, m, deterministic)
}
func (m *ProtocolMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolMap.Merge(m, src)
}
func (m *ProtocolMap) XXX_Size() int {
	return xxx_messageInfo_ProtocolMap.Size(m)
}
func (m *ProtocolMap) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolMap.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolMap proto.InternalMessageInfo

func (m *ProtocolMap) GetStrprotocolMapId() string {
	if m != nil {
		return m.StrprotocolMapId
	}
	return ""
}

func (m *ProtocolMap) GetStrsrcProtocol() string {
	if m != nil {
		return m.StrsrcProtocol
	}
	return ""
}

func (m *ProtocolMap) GetIsrcPort() int32 {
	if m != nil {
		return m.IsrcPort
	}
	return 0
}

func (m *ProtocolMap) GetStrdstProtocol() string {
	if m != nil {
		return m.StrdstProtocol
	}
	return ""
}

func (m *ProtocolMap) GetIdstPort() int32 {
	if m != nil {
		return m.IdstPort
	}
	return 0
}

type WebsiteReqInfo struct {
	StrdomainId          string         `protobuf:"bytes,1,opt,name=strdomain_id,json=strdomainId,proto3" json:"strdomain_id,omitempty"`
	StrgroupId           string         `protobuf:"bytes,2,opt,name=strgroup_id,json=strgroupId,proto3" json:"strgroup_id,omitempty"`
	StrsrcDomain         string         `protobuf:"bytes,3,opt,name=strsrc_domain,json=strsrcDomain,proto3" json:"strsrc_domain,omitempty"`
	StrdstDomain         string         `protobuf:"bytes,4,opt,name=strdst_domain,json=strdstDomain,proto3" json:"strdst_domain,omitempty"`
	StrsrcIpAddr         string         `protobuf:"bytes,5,opt,name=strsrc_ip_addr,json=strsrcIpAddr,proto3" json:"strsrc_ip_addr,omitempty"`
	StripAddr            string         `protobuf:"bytes,6,opt,name=strip_addr,json=stripAddr,proto3" json:"strip_addr,omitempty"`
	ProtocolMap          []*ProtocolMap `protobuf:"bytes,7,rep,name=protocol_map,json=protocolMap,proto3" json:"protocol_map,omitempty"`
	StrwebsiteHrefDomain string         `protobuf:"bytes,8,opt,name=strwebsite_href_domain,json=strwebsiteHrefDomain,proto3" json:"strwebsite_href_domain,omitempty"`
	I64Mod               int32          `protobuf:"varint,9,opt,name=i64mod,proto3" json:"i64mod,omitempty"`
	Istatus              int32          `protobuf:"varint,10,opt,name=istatus,proto3" json:"istatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WebsiteReqInfo) Reset()         { *m = WebsiteReqInfo{} }
func (m *WebsiteReqInfo) String() string { return proto.CompactTextString(m) }
func (*WebsiteReqInfo) ProtoMessage()    {}
func (*WebsiteReqInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{8}
}

func (m *WebsiteReqInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebsiteReqInfo.Unmarshal(m, b)
}
func (m *WebsiteReqInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebsiteReqInfo.Marshal(b, m, deterministic)
}
func (m *WebsiteReqInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebsiteReqInfo.Merge(m, src)
}
func (m *WebsiteReqInfo) XXX_Size() int {
	return xxx_messageInfo_WebsiteReqInfo.Size(m)
}
func (m *WebsiteReqInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WebsiteReqInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WebsiteReqInfo proto.InternalMessageInfo

func (m *WebsiteReqInfo) GetStrdomainId() string {
	if m != nil {
		return m.StrdomainId
	}
	return ""
}

func (m *WebsiteReqInfo) GetStrgroupId() string {
	if m != nil {
		return m.StrgroupId
	}
	return ""
}

func (m *WebsiteReqInfo) GetStrsrcDomain() string {
	if m != nil {
		return m.StrsrcDomain
	}
	return ""
}

func (m *WebsiteReqInfo) GetStrdstDomain() string {
	if m != nil {
		return m.StrdstDomain
	}
	return ""
}

func (m *WebsiteReqInfo) GetStrsrcIpAddr() string {
	if m != nil {
		return m.StrsrcIpAddr
	}
	return ""
}

func (m *WebsiteReqInfo) GetStripAddr() string {
	if m != nil {
		return m.StripAddr
	}
	return ""
}

func (m *WebsiteReqInfo) GetProtocolMap() []*ProtocolMap {
	if m != nil {
		return m.ProtocolMap
	}
	return nil
}

func (m *WebsiteReqInfo) GetStrwebsiteHrefDomain() string {
	if m != nil {
		return m.StrwebsiteHrefDomain
	}
	return ""
}

func (m *WebsiteReqInfo) GetI64Mod() int32 {
	if m != nil {
		return m.I64Mod
	}
	return 0
}

func (m *WebsiteReqInfo) GetIstatus() int32 {
	if m != nil {
		return m.Istatus
	}
	return 0
}

type OptRaltWebsiteReq struct {
	Iopt                 int32             `protobuf:"varint,1,opt,name=iopt,proto3" json:"iopt,omitempty"`
	Website              []*WebsiteReqInfo `protobuf:"bytes,2,rep,name=website,proto3" json:"website,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OptRaltWebsiteReq) Reset()         { *m = OptRaltWebsiteReq{} }
func (m *OptRaltWebsiteReq) String() string { return proto.CompactTextString(m) }
func (*OptRaltWebsiteReq) ProtoMessage()    {}
func (*OptRaltWebsiteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{9}
}

func (m *OptRaltWebsiteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptRaltWebsiteReq.Unmarshal(m, b)
}
func (m *OptRaltWebsiteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptRaltWebsiteReq.Marshal(b, m, deterministic)
}
func (m *OptRaltWebsiteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptRaltWebsiteReq.Merge(m, src)
}
func (m *OptRaltWebsiteReq) XXX_Size() int {
	return xxx_messageInfo_OptRaltWebsiteReq.Size(m)
}
func (m *OptRaltWebsiteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OptRaltWebsiteReq.DiscardUnknown(m)
}

var xxx_messageInfo_OptRaltWebsiteReq proto.InternalMessageInfo

func (m *OptRaltWebsiteReq) GetIopt() int32 {
	if m != nil {
		return m.Iopt
	}
	return 0
}

func (m *OptRaltWebsiteReq) GetWebsite() []*WebsiteReqInfo {
	if m != nil {
		return m.Website
	}
	return nil
}

type GetRaltWebsiteReq struct {
	StrdomainId          []string `protobuf:"bytes,1,rep,name=strdomain_id,json=strdomainId,proto3" json:"strdomain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRaltWebsiteReq) Reset()         { *m = GetRaltWebsiteReq{} }
func (m *GetRaltWebsiteReq) String() string { return proto.CompactTextString(m) }
func (*GetRaltWebsiteReq) ProtoMessage()    {}
func (*GetRaltWebsiteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{10}
}

func (m *GetRaltWebsiteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRaltWebsiteReq.Unmarshal(m, b)
}
func (m *GetRaltWebsiteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRaltWebsiteReq.Marshal(b, m, deterministic)
}
func (m *GetRaltWebsiteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRaltWebsiteReq.Merge(m, src)
}
func (m *GetRaltWebsiteReq) XXX_Size() int {
	return xxx_messageInfo_GetRaltWebsiteReq.Size(m)
}
func (m *GetRaltWebsiteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRaltWebsiteReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRaltWebsiteReq proto.InternalMessageInfo

func (m *GetRaltWebsiteReq) GetStrdomainId() []string {
	if m != nil {
		return m.StrdomainId
	}
	return nil
}

type WebsiteRspInfo struct {
	StrdomainId          string         `protobuf:"bytes,1,opt,name=strdomain_id,json=strdomainId,proto3" json:"strdomain_id,omitempty"`
	StrgroupId           string         `protobuf:"bytes,2,opt,name=strgroup_id,json=strgroupId,proto3" json:"strgroup_id,omitempty"`
	Strdomain            string         `protobuf:"bytes,3,opt,name=strdomain,proto3" json:"strdomain,omitempty"`
	StrclusterId         string         `protobuf:"bytes,4,opt,name=strcluster_id,json=strclusterId,proto3" json:"strcluster_id,omitempty"`
	StripAddr            string         `protobuf:"bytes,5,opt,name=strip_addr,json=stripAddr,proto3" json:"strip_addr,omitempty"`
	ProtocolMap          []*ProtocolMap `protobuf:"bytes,6,rep,name=protocol_map,json=protocolMap,proto3" json:"protocol_map,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WebsiteRspInfo) Reset()         { *m = WebsiteRspInfo{} }
func (m *WebsiteRspInfo) String() string { return proto.CompactTextString(m) }
func (*WebsiteRspInfo) ProtoMessage()    {}
func (*WebsiteRspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{11}
}

func (m *WebsiteRspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebsiteRspInfo.Unmarshal(m, b)
}
func (m *WebsiteRspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebsiteRspInfo.Marshal(b, m, deterministic)
}
func (m *WebsiteRspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebsiteRspInfo.Merge(m, src)
}
func (m *WebsiteRspInfo) XXX_Size() int {
	return xxx_messageInfo_WebsiteRspInfo.Size(m)
}
func (m *WebsiteRspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WebsiteRspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WebsiteRspInfo proto.InternalMessageInfo

func (m *WebsiteRspInfo) GetStrdomainId() string {
	if m != nil {
		return m.StrdomainId
	}
	return ""
}

func (m *WebsiteRspInfo) GetStrgroupId() string {
	if m != nil {
		return m.StrgroupId
	}
	return ""
}

func (m *WebsiteRspInfo) GetStrdomain() string {
	if m != nil {
		return m.Strdomain
	}
	return ""
}

func (m *WebsiteRspInfo) GetStrclusterId() string {
	if m != nil {
		return m.StrclusterId
	}
	return ""
}

func (m *WebsiteRspInfo) GetStripAddr() string {
	if m != nil {
		return m.StripAddr
	}
	return ""
}

func (m *WebsiteRspInfo) GetProtocolMap() []*ProtocolMap {
	if m != nil {
		return m.ProtocolMap
	}
	return nil
}

type GetRaltWebsiteRsp struct {
	Website              []*WebsiteRspInfo `protobuf:"bytes,1,rep,name=website,proto3" json:"website,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRaltWebsiteRsp) Reset()         { *m = GetRaltWebsiteRsp{} }
func (m *GetRaltWebsiteRsp) String() string { return proto.CompactTextString(m) }
func (*GetRaltWebsiteRsp) ProtoMessage()    {}
func (*GetRaltWebsiteRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{12}
}

func (m *GetRaltWebsiteRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRaltWebsiteRsp.Unmarshal(m, b)
}
func (m *GetRaltWebsiteRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRaltWebsiteRsp.Marshal(b, m, deterministic)
}
func (m *GetRaltWebsiteRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRaltWebsiteRsp.Merge(m, src)
}
func (m *GetRaltWebsiteRsp) XXX_Size() int {
	return xxx_messageInfo_GetRaltWebsiteRsp.Size(m)
}
func (m *GetRaltWebsiteRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRaltWebsiteRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRaltWebsiteRsp proto.InternalMessageInfo

func (m *GetRaltWebsiteRsp) GetWebsite() []*WebsiteRspInfo {
	if m != nil {
		return m.Website
	}
	return nil
}

type GetRaltSpecWebsiteReq struct {
	StrdomainId          string   `protobuf:"bytes,1,opt,name=strdomain_id,json=strdomainId,proto3" json:"strdomain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRaltSpecWebsiteReq) Reset()         { *m = GetRaltSpecWebsiteReq{} }
func (m *GetRaltSpecWebsiteReq) String() string { return proto.CompactTextString(m) }
func (*GetRaltSpecWebsiteReq) ProtoMessage()    {}
func (*GetRaltSpecWebsiteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{13}
}

func (m *GetRaltSpecWebsiteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRaltSpecWebsiteReq.Unmarshal(m, b)
}
func (m *GetRaltSpecWebsiteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRaltSpecWebsiteReq.Marshal(b, m, deterministic)
}
func (m *GetRaltSpecWebsiteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRaltSpecWebsiteReq.Merge(m, src)
}
func (m *GetRaltSpecWebsiteReq) XXX_Size() int {
	return xxx_messageInfo_GetRaltSpecWebsiteReq.Size(m)
}
func (m *GetRaltSpecWebsiteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRaltSpecWebsiteReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRaltSpecWebsiteReq proto.InternalMessageInfo

func (m *GetRaltSpecWebsiteReq) GetStrdomainId() string {
	if m != nil {
		return m.StrdomainId
	}
	return ""
}

type GetRaltSpecWebsiteRsp struct {
	Website              []*WebsiteReqInfo `protobuf:"bytes,1,rep,name=website,proto3" json:"website,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRaltSpecWebsiteRsp) Reset()         { *m = GetRaltSpecWebsiteRsp{} }
func (m *GetRaltSpecWebsiteRsp) String() string { return proto.CompactTextString(m) }
func (*GetRaltSpecWebsiteRsp) ProtoMessage()    {}
func (*GetRaltSpecWebsiteRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{14}
}

func (m *GetRaltSpecWebsiteRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRaltSpecWebsiteRsp.Unmarshal(m, b)
}
func (m *GetRaltSpecWebsiteRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRaltSpecWebsiteRsp.Marshal(b, m, deterministic)
}
func (m *GetRaltSpecWebsiteRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRaltSpecWebsiteRsp.Merge(m, src)
}
func (m *GetRaltSpecWebsiteRsp) XXX_Size() int {
	return xxx_messageInfo_GetRaltSpecWebsiteRsp.Size(m)
}
func (m *GetRaltSpecWebsiteRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRaltSpecWebsiteRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRaltSpecWebsiteRsp proto.InternalMessageInfo

func (m *GetRaltSpecWebsiteRsp) GetWebsite() []*WebsiteReqInfo {
	if m != nil {
		return m.Website
	}
	return nil
}

type IPBlock struct {
	StripAddrStart       string   `protobuf:"bytes,1,opt,name=strip_addr_start,json=stripAddrStart,proto3" json:"strip_addr_start,omitempty"`
	StripAddrEnd         string   `protobuf:"bytes,2,opt,name=strip_addr_end,json=stripAddrEnd,proto3" json:"strip_addr_end,omitempty"`
	IipPrefix            int32    `protobuf:"varint,3,opt,name=iip_prefix,json=iipPrefix,proto3" json:"iip_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPBlock) Reset()         { *m = IPBlock{} }
func (m *IPBlock) String() string { return proto.CompactTextString(m) }
func (*IPBlock) ProtoMessage()    {}
func (*IPBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{15}
}

func (m *IPBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPBlock.Unmarshal(m, b)
}
func (m *IPBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPBlock.Marshal(b, m, deterministic)
}
func (m *IPBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPBlock.Merge(m, src)
}
func (m *IPBlock) XXX_Size() int {
	return xxx_messageInfo_IPBlock.Size(m)
}
func (m *IPBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_IPBlock.DiscardUnknown(m)
}

var xxx_messageInfo_IPBlock proto.InternalMessageInfo

func (m *IPBlock) GetStripAddrStart() string {
	if m != nil {
		return m.StripAddrStart
	}
	return ""
}

func (m *IPBlock) GetStripAddrEnd() string {
	if m != nil {
		return m.StripAddrEnd
	}
	return ""
}

func (m *IPBlock) GetIipPrefix() int32 {
	if m != nil {
		return m.IipPrefix
	}
	return 0
}

type GetAvailIPReq struct {
	StrclusterId         string   `protobuf:"bytes,1,opt,name=strcluster_id,json=strclusterId,proto3" json:"strcluster_id,omitempty"`
	Network              int32    `protobuf:"varint,2,opt,name=network,proto3" json:"network,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAvailIPReq) Reset()         { *m = GetAvailIPReq{} }
func (m *GetAvailIPReq) String() string { return proto.CompactTextString(m) }
func (*GetAvailIPReq) ProtoMessage()    {}
func (*GetAvailIPReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{16}
}

func (m *GetAvailIPReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAvailIPReq.Unmarshal(m, b)
}
func (m *GetAvailIPReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAvailIPReq.Marshal(b, m, deterministic)
}
func (m *GetAvailIPReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAvailIPReq.Merge(m, src)
}
func (m *GetAvailIPReq) XXX_Size() int {
	return xxx_messageInfo_GetAvailIPReq.Size(m)
}
func (m *GetAvailIPReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAvailIPReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAvailIPReq proto.InternalMessageInfo

func (m *GetAvailIPReq) GetStrclusterId() string {
	if m != nil {
		return m.StrclusterId
	}
	return ""
}

func (m *GetAvailIPReq) GetNetwork() int32 {
	if m != nil {
		return m.Network
	}
	return 0
}

func (m *GetAvailIPReq) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetAvailIPRsp struct {
	Ip                   []string `protobuf:"bytes,1,rep,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAvailIPRsp) Reset()         { *m = GetAvailIPRsp{} }
func (m *GetAvailIPRsp) String() string { return proto.CompactTextString(m) }
func (*GetAvailIPRsp) ProtoMessage()    {}
func (*GetAvailIPRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{17}
}

func (m *GetAvailIPRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAvailIPRsp.Unmarshal(m, b)
}
func (m *GetAvailIPRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAvailIPRsp.Marshal(b, m, deterministic)
}
func (m *GetAvailIPRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAvailIPRsp.Merge(m, src)
}
func (m *GetAvailIPRsp) XXX_Size() int {
	return xxx_messageInfo_GetAvailIPRsp.Size(m)
}
func (m *GetAvailIPRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAvailIPRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAvailIPRsp proto.InternalMessageInfo

func (m *GetAvailIPRsp) GetIp() []string {
	if m != nil {
		return m.Ip
	}
	return nil
}

type UploadCertPriKeyReq struct {
	StrdomainId          string   `protobuf:"bytes,1,opt,name=strdomain_id,json=strdomainId,proto3" json:"strdomain_id,omitempty"`
	StrcertFname         string   `protobuf:"bytes,2,opt,name=strcert_fname,json=strcertFname,proto3" json:"strcert_fname,omitempty"`
	CzcertContent        []byte   `protobuf:"bytes,3,opt,name=czcert_content,json=czcertContent,proto3" json:"czcert_content,omitempty"`
	StrprikeyFname       string   `protobuf:"bytes,4,opt,name=strprikey_fname,json=strprikeyFname,proto3" json:"strprikey_fname,omitempty"`
	CzprikeyContent      []byte   `protobuf:"bytes,5,opt,name=czprikey_content,json=czprikeyContent,proto3" json:"czprikey_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadCertPriKeyReq) Reset()         { *m = UploadCertPriKeyReq{} }
func (m *UploadCertPriKeyReq) String() string { return proto.CompactTextString(m) }
func (*UploadCertPriKeyReq) ProtoMessage()    {}
func (*UploadCertPriKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{18}
}

func (m *UploadCertPriKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadCertPriKeyReq.Unmarshal(m, b)
}
func (m *UploadCertPriKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadCertPriKeyReq.Marshal(b, m, deterministic)
}
func (m *UploadCertPriKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadCertPriKeyReq.Merge(m, src)
}
func (m *UploadCertPriKeyReq) XXX_Size() int {
	return xxx_messageInfo_UploadCertPriKeyReq.Size(m)
}
func (m *UploadCertPriKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadCertPriKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_UploadCertPriKeyReq proto.InternalMessageInfo

func (m *UploadCertPriKeyReq) GetStrdomainId() string {
	if m != nil {
		return m.StrdomainId
	}
	return ""
}

func (m *UploadCertPriKeyReq) GetStrcertFname() string {
	if m != nil {
		return m.StrcertFname
	}
	return ""
}

func (m *UploadCertPriKeyReq) GetCzcertContent() []byte {
	if m != nil {
		return m.CzcertContent
	}
	return nil
}

func (m *UploadCertPriKeyReq) GetStrprikeyFname() string {
	if m != nil {
		return m.StrprikeyFname
	}
	return ""
}

func (m *UploadCertPriKeyReq) GetCzprikeyContent() []byte {
	if m != nil {
		return m.CzprikeyContent
	}
	return nil
}

type RemoveCertPriKeyReq struct {
	StrdomainId          string   `protobuf:"bytes,1,opt,name=strdomain_id,json=strdomainId,proto3" json:"strdomain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveCertPriKeyReq) Reset()         { *m = RemoveCertPriKeyReq{} }
func (m *RemoveCertPriKeyReq) String() string { return proto.CompactTextString(m) }
func (*RemoveCertPriKeyReq) ProtoMessage()    {}
func (*RemoveCertPriKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{19}
}

func (m *RemoveCertPriKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveCertPriKeyReq.Unmarshal(m, b)
}
func (m *RemoveCertPriKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveCertPriKeyReq.Marshal(b, m, deterministic)
}
func (m *RemoveCertPriKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveCertPriKeyReq.Merge(m, src)
}
func (m *RemoveCertPriKeyReq) XXX_Size() int {
	return xxx_messageInfo_RemoveCertPriKeyReq.Size(m)
}
func (m *RemoveCertPriKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveCertPriKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveCertPriKeyReq proto.InternalMessageInfo

func (m *RemoveCertPriKeyReq) GetStrdomainId() string {
	if m != nil {
		return m.StrdomainId
	}
	return ""
}

type GetCertPriKeyReq struct {
	StrdomainId          string   `protobuf:"bytes,1,opt,name=strdomain_id,json=strdomainId,proto3" json:"strdomain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCertPriKeyReq) Reset()         { *m = GetCertPriKeyReq{} }
func (m *GetCertPriKeyReq) String() string { return proto.CompactTextString(m) }
func (*GetCertPriKeyReq) ProtoMessage()    {}
func (*GetCertPriKeyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{20}
}

func (m *GetCertPriKeyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCertPriKeyReq.Unmarshal(m, b)
}
func (m *GetCertPriKeyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCertPriKeyReq.Marshal(b, m, deterministic)
}
func (m *GetCertPriKeyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCertPriKeyReq.Merge(m, src)
}
func (m *GetCertPriKeyReq) XXX_Size() int {
	return xxx_messageInfo_GetCertPriKeyReq.Size(m)
}
func (m *GetCertPriKeyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCertPriKeyReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetCertPriKeyReq proto.InternalMessageInfo

func (m *GetCertPriKeyReq) GetStrdomainId() string {
	if m != nil {
		return m.StrdomainId
	}
	return ""
}

type GetCertPriKeyRsp struct {
	StrcertFname         string   `protobuf:"bytes,2,opt,name=strcert_fname,json=strcertFname,proto3" json:"strcert_fname,omitempty"`
	StrprikeyFname       string   `protobuf:"bytes,4,opt,name=strprikey_fname,json=strprikeyFname,proto3" json:"strprikey_fname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCertPriKeyRsp) Reset()         { *m = GetCertPriKeyRsp{} }
func (m *GetCertPriKeyRsp) String() string { return proto.CompactTextString(m) }
func (*GetCertPriKeyRsp) ProtoMessage()    {}
func (*GetCertPriKeyRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{21}
}

func (m *GetCertPriKeyRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCertPriKeyRsp.Unmarshal(m, b)
}
func (m *GetCertPriKeyRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCertPriKeyRsp.Marshal(b, m, deterministic)
}
func (m *GetCertPriKeyRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCertPriKeyRsp.Merge(m, src)
}
func (m *GetCertPriKeyRsp) XXX_Size() int {
	return xxx_messageInfo_GetCertPriKeyRsp.Size(m)
}
func (m *GetCertPriKeyRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCertPriKeyRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetCertPriKeyRsp proto.InternalMessageInfo

func (m *GetCertPriKeyRsp) GetStrcertFname() string {
	if m != nil {
		return m.StrcertFname
	}
	return ""
}

func (m *GetCertPriKeyRsp) GetStrprikeyFname() string {
	if m != nil {
		return m.StrprikeyFname
	}
	return ""
}

type FuncSwitcherInfo struct {
	BreplaceHref         bool     `protobuf:"varint,1,opt,name=breplace_href,json=breplaceHref,proto3" json:"breplace_href,omitempty"`
	BhttpsToHttp         bool     `protobuf:"varint,2,opt,name=bhttps_to_http,json=bhttpsToHttp,proto3" json:"bhttps_to_http,omitempty"`
	BcheckInet6Support   bool     `protobuf:"varint,3,opt,name=bcheck_inet6_support,json=bcheckInet6Support,proto3" json:"bcheck_inet6_support,omitempty"`
	Binet6Cache          bool     `protobuf:"varint,4,opt,name=binet6_cache,json=binet6Cache,proto3" json:"binet6_cache,omitempty"`
	StriconUrl           string   `protobuf:"bytes,5,opt,name=stricon_url,json=striconUrl,proto3" json:"stricon_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FuncSwitcherInfo) Reset()         { *m = FuncSwitcherInfo{} }
func (m *FuncSwitcherInfo) String() string { return proto.CompactTextString(m) }
func (*FuncSwitcherInfo) ProtoMessage()    {}
func (*FuncSwitcherInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{22}
}

func (m *FuncSwitcherInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FuncSwitcherInfo.Unmarshal(m, b)
}
func (m *FuncSwitcherInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FuncSwitcherInfo.Marshal(b, m, deterministic)
}
func (m *FuncSwitcherInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FuncSwitcherInfo.Merge(m, src)
}
func (m *FuncSwitcherInfo) XXX_Size() int {
	return xxx_messageInfo_FuncSwitcherInfo.Size(m)
}
func (m *FuncSwitcherInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FuncSwitcherInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FuncSwitcherInfo proto.InternalMessageInfo

func (m *FuncSwitcherInfo) GetBreplaceHref() bool {
	if m != nil {
		return m.BreplaceHref
	}
	return false
}

func (m *FuncSwitcherInfo) GetBhttpsToHttp() bool {
	if m != nil {
		return m.BhttpsToHttp
	}
	return false
}

func (m *FuncSwitcherInfo) GetBcheckInet6Support() bool {
	if m != nil {
		return m.BcheckInet6Support
	}
	return false
}

func (m *FuncSwitcherInfo) GetBinet6Cache() bool {
	if m != nil {
		return m.Binet6Cache
	}
	return false
}

func (m *FuncSwitcherInfo) GetStriconUrl() string {
	if m != nil {
		return m.StriconUrl
	}
	return ""
}

type RuleInfo struct {
	StrruleId            string   `protobuf:"bytes,1,opt,name=strrule_id,json=strruleId,proto3" json:"strrule_id,omitempty"`
	IruleType            int32    `protobuf:"varint,2,opt,name=irule_type,json=iruleType,proto3" json:"irule_type,omitempty"`
	IruleSubtype         int32    `protobuf:"varint,3,opt,name=irule_subtype,json=iruleSubtype,proto3" json:"irule_subtype,omitempty"`
	Strsearch            string   `protobuf:"bytes,4,opt,name=strsearch,proto3" json:"strsearch,omitempty"`
	Strreplace           string   `protobuf:"bytes,5,opt,name=strreplace,proto3" json:"strreplace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuleInfo) Reset()         { *m = RuleInfo{} }
func (m *RuleInfo) String() string { return proto.CompactTextString(m) }
func (*RuleInfo) ProtoMessage()    {}
func (*RuleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{23}
}

func (m *RuleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleInfo.Unmarshal(m, b)
}
func (m *RuleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleInfo.Marshal(b, m, deterministic)
}
func (m *RuleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleInfo.Merge(m, src)
}
func (m *RuleInfo) XXX_Size() int {
	return xxx_messageInfo_RuleInfo.Size(m)
}
func (m *RuleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RuleInfo proto.InternalMessageInfo

func (m *RuleInfo) GetStrruleId() string {
	if m != nil {
		return m.StrruleId
	}
	return ""
}

func (m *RuleInfo) GetIruleType() int32 {
	if m != nil {
		return m.IruleType
	}
	return 0
}

func (m *RuleInfo) GetIruleSubtype() int32 {
	if m != nil {
		return m.IruleSubtype
	}
	return 0
}

func (m *RuleInfo) GetStrsearch() string {
	if m != nil {
		return m.Strsearch
	}
	return ""
}

func (m *RuleInfo) GetStrreplace() string {
	if m != nil {
		return m.Strreplace
	}
	return ""
}

type SuspendWebsiteReq struct {
	StrdomainId          string   `protobuf:"bytes,1,opt,name=strdomain_id,json=strdomainId,proto3" json:"strdomain_id,omitempty"`
	Istatus              int32    `protobuf:"varint,2,opt,name=istatus,proto3" json:"istatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuspendWebsiteReq) Reset()         { *m = SuspendWebsiteReq{} }
func (m *SuspendWebsiteReq) String() string { return proto.CompactTextString(m) }
func (*SuspendWebsiteReq) ProtoMessage()    {}
func (*SuspendWebsiteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{24}
}

func (m *SuspendWebsiteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuspendWebsiteReq.Unmarshal(m, b)
}
func (m *SuspendWebsiteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuspendWebsiteReq.Marshal(b, m, deterministic)
}
func (m *SuspendWebsiteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuspendWebsiteReq.Merge(m, src)
}
func (m *SuspendWebsiteReq) XXX_Size() int {
	return xxx_messageInfo_SuspendWebsiteReq.Size(m)
}
func (m *SuspendWebsiteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SuspendWebsiteReq.DiscardUnknown(m)
}

var xxx_messageInfo_SuspendWebsiteReq proto.InternalMessageInfo

func (m *SuspendWebsiteReq) GetStrdomainId() string {
	if m != nil {
		return m.StrdomainId
	}
	return ""
}

func (m *SuspendWebsiteReq) GetIstatus() int32 {
	if m != nil {
		return m.Istatus
	}
	return 0
}

type MyTestReq struct {
	Strmytest            string   `protobuf:"bytes,1,opt,name=strmytest,proto3" json:"strmytest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MyTestReq) Reset()         { *m = MyTestReq{} }
func (m *MyTestReq) String() string { return proto.CompactTextString(m) }
func (*MyTestReq) ProtoMessage()    {}
func (*MyTestReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_78599ee430eb8167, []int{25}
}

func (m *MyTestReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MyTestReq.Unmarshal(m, b)
}
func (m *MyTestReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MyTestReq.Marshal(b, m, deterministic)
}
func (m *MyTestReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MyTestReq.Merge(m, src)
}
func (m *MyTestReq) XXX_Size() int {
	return xxx_messageInfo_MyTestReq.Size(m)
}
func (m *MyTestReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MyTestReq.DiscardUnknown(m)
}

var xxx_messageInfo_MyTestReq proto.InternalMessageInfo

func (m *MyTestReq) GetStrmytest() string {
	if m != nil {
		return m.Strmytest
	}
	return ""
}

func init() {
	proto.RegisterType((*OperResult)(nil), "rcs.OperResult")
	proto.RegisterType((*NULLMsgReq)(nil), "rcs.NULLMsgReq")
	proto.RegisterType((*NoArgReq)(nil), "rcs.NoArgReq")
	proto.RegisterType((*OptRaltGroupReq)(nil), "rcs.OptRaltGroupReq")
	proto.RegisterType((*GetRaltGroupReq)(nil), "rcs.GetRaltGroupReq")
	proto.RegisterType((*GroupInfo)(nil), "rcs.GroupInfo")
	proto.RegisterType((*GetRaltGroupRsp)(nil), "rcs.GetRaltGroupRsp")
	proto.RegisterType((*ProtocolMap)(nil), "rcs.ProtocolMap")
	proto.RegisterType((*WebsiteReqInfo)(nil), "rcs.WebsiteReqInfo")
	proto.RegisterType((*OptRaltWebsiteReq)(nil), "rcs.OptRaltWebsiteReq")
	proto.RegisterType((*GetRaltWebsiteReq)(nil), "rcs.GetRaltWebsiteReq")
	proto.RegisterType((*WebsiteRspInfo)(nil), "rcs.WebsiteRspInfo")
	proto.RegisterType((*GetRaltWebsiteRsp)(nil), "rcs.GetRaltWebsiteRsp")
	proto.RegisterType((*GetRaltSpecWebsiteReq)(nil), "rcs.GetRaltSpecWebsiteReq")
	proto.RegisterType((*GetRaltSpecWebsiteRsp)(nil), "rcs.GetRaltSpecWebsiteRsp")
	proto.RegisterType((*IPBlock)(nil), "rcs.IPBlock")
	proto.RegisterType((*GetAvailIPReq)(nil), "rcs.GetAvailIPReq")
	proto.RegisterType((*GetAvailIPRsp)(nil), "rcs.GetAvailIPRsp")
	proto.RegisterType((*UploadCertPriKeyReq)(nil), "rcs.UploadCertPriKeyReq")
	proto.RegisterType((*RemoveCertPriKeyReq)(nil), "rcs.RemoveCertPriKeyReq")
	proto.RegisterType((*GetCertPriKeyReq)(nil), "rcs.GetCertPriKeyReq")
	proto.RegisterType((*GetCertPriKeyRsp)(nil), "rcs.GetCertPriKeyRsp")
	proto.RegisterType((*FuncSwitcherInfo)(nil), "rcs.FuncSwitcherInfo")
	proto.RegisterType((*RuleInfo)(nil), "rcs.RuleInfo")
	proto.RegisterType((*SuspendWebsiteReq)(nil), "rcs.SuspendWebsiteReq")
	proto.RegisterType((*MyTestReq)(nil), "rcs.MyTestReq")
}

func init() { proto.RegisterFile("ralt_plugin.proto", fileDescriptor_78599ee430eb8167) }

var fileDescriptor_78599ee430eb8167 = []byte{
	// 1427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0xae, 0xe3, 0xf8, 0xef, 0xd8, 0x71, 0x92, 0x6d, 0x5a, 0x44, 0x28, 0x34, 0x15, 0x30, 0xa4,
	0x03, 0xed, 0x30, 0x69, 0x29, 0x4c, 0x61, 0x98, 0xb6, 0x86, 0xa6, 0x1e, 0x9a, 0xd4, 0x23, 0xb7,
	0x70, 0x29, 0x64, 0x69, 0xed, 0xec, 0x44, 0xd6, 0x6e, 0x77, 0x57, 0x6d, 0xd3, 0x2b, 0xde, 0xa7,
	0xb7, 0xbc, 0x03, 0x17, 0x5c, 0x72, 0xc3, 0x3b, 0xf0, 0x12, 0xcc, 0xfe, 0xc8, 0x92, 0x6d, 0x95,
	0x24, 0x0c, 0xdc, 0x49, 0xdf, 0x7e, 0x7b, 0xf6, 0xec, 0xf9, 0xce, 0x7e, 0x2b, 0xc1, 0x26, 0x0f,
	0x62, 0xe9, 0xb3, 0x38, 0x9d, 0x90, 0xe4, 0x26, 0xe3, 0x54, 0x52, 0x54, 0xe5, 0xa1, 0x70, 0xef,
	0x01, 0x3c, 0x61, 0x98, 0x7b, 0x58, 0xa4, 0xb1, 0x44, 0xef, 0x42, 0x93, 0x63, 0xe9, 0x87, 0x34,
	0xc2, 0x4e, 0x65, 0xa7, 0xb2, 0x5b, 0xf3, 0x1a, 0x1c, 0xcb, 0x1e, 0x8d, 0x30, 0x7a, 0x07, 0xd4,
	0xa3, 0x3f, 0x15, 0x13, 0x67, 0x65, 0xa7, 0xb2, 0xdb, 0xf2, 0xea, 0x1c, 0xcb, 0x03, 0x31, 0x71,
	0x3b, 0x00, 0x87, 0xcf, 0x1e, 0x3f, 0x3e, 0x10, 0x13, 0x0f, 0x3f, 0x77, 0x01, 0x9a, 0x87, 0xf4,
	0x3e, 0xd7, 0xcf, 0x6f, 0xaa, 0xb0, 0xfe, 0x84, 0x49, 0x2f, 0x88, 0xe5, 0x3e, 0xa7, 0x29, 0xf3,
	0xf0, 0x73, 0x84, 0x60, 0x95, 0x50, 0x26, 0x6d, 0x74, 0xfd, 0x8c, 0xae, 0x42, 0x5b, 0x48, 0x3e,
	0x51, 0x14, 0x9f, 0x44, 0x36, 0x3c, 0x64, 0x50, 0x3f, 0x42, 0x1f, 0xc2, 0xda, 0x8c, 0x90, 0x04,
	0x53, 0xec, 0x54, 0x35, 0xa5, 0x93, 0x81, 0x87, 0xc1, 0x14, 0xa3, 0xcf, 0x61, 0x6b, 0x46, 0x3a,
	0xe2, 0x78, 0xec, 0x47, 0x74, 0x1a, 0x90, 0xc4, 0x59, 0xd5, 0x5c, 0x94, 0x8d, 0x3d, 0xe2, 0x78,
	0xfc, 0x9d, 0x1e, 0x41, 0xdf, 0xc2, 0x95, 0xb2, 0x19, 0x3e, 0x61, 0x7e, 0x10, 0x45, 0xdc, 0xa9,
	0xe9, 0x99, 0xce, 0xf2, 0xcc, 0x3e, 0xbb, 0x1f, 0x45, 0x1c, 0x7d, 0x0c, 0x5d, 0x22, 0x79, 0x90,
	0x88, 0x31, 0xe5, 0x53, 0x7f, 0x4a, 0x23, 0xa7, 0xae, 0x77, 0xb5, 0x96, 0xa3, 0x07, 0x34, 0x42,
	0xd7, 0xa0, 0x43, 0xa6, 0xc1, 0x2b, 0x5f, 0x60, 0x21, 0x08, 0x4d, 0x9c, 0x86, 0x26, 0xb5, 0x15,
	0x36, 0x34, 0x90, 0xdd, 0x60, 0x18, 0xa7, 0x42, 0x62, 0xae, 0x6a, 0xd0, 0x9c, 0x6d, 0xd0, 0x82,
	0xfd, 0x08, 0xdd, 0x85, 0xb5, 0x71, 0x9a, 0x84, 0xbe, 0x78, 0x49, 0x64, 0x78, 0x84, 0xb9, 0xd3,
	0xda, 0xa9, 0xec, 0xb6, 0xf7, 0x2e, 0xdd, 0xe4, 0xa1, 0xb8, 0xf9, 0x30, 0x4d, 0xc2, 0xa1, 0x1d,
	0xe8, 0x27, 0x63, 0xea, 0x75, 0xc6, 0x05, 0x04, 0x5d, 0x83, 0x55, 0x9e, 0xc6, 0xd8, 0x81, 0x9d,
	0xea, 0x6e, 0x7b, 0x6f, 0x4d, 0x4f, 0xf1, 0xd2, 0x18, 0x6b, 0xaa, 0x1e, 0x72, 0xf7, 0x60, 0x7d,
	0x1f, 0xcf, 0x8b, 0xb5, 0x20, 0x4c, 0x65, 0x51, 0x18, 0xf7, 0xd7, 0x2a, 0xb4, 0x34, 0x5b, 0xc5,
	0x39, 0x95, 0xbe, 0xac, 0xe3, 0x4a, 0x89, 0x8e, 0xaa, 0x5c, 0x2f, 0xf1, 0x48, 0x10, 0x89, 0xfd,
	0x24, 0x9d, 0x6a, 0xad, 0x55, 0xb9, 0x2c, 0x76, 0x98, 0x4e, 0x97, 0xcb, 0xb5, 0x5a, 0x52, 0xae,
	0x65, 0x75, 0x6a, 0x65, 0xea, 0xbc, 0xad, 0x6d, 0xea, 0xff, 0xba, 0x6d, 0x1a, 0xa7, 0xb4, 0xcd,
	0x62, 0x3f, 0x34, 0x97, 0xfb, 0xe1, 0x7f, 0x96, 0xfa, 0xde, 0x82, 0xd4, 0x82, 0xa1, 0x1b, 0x00,
	0x66, 0x47, 0x31, 0x11, 0xea, 0x74, 0xaa, 0xb9, 0x5d, 0x3d, 0x77, 0xa6, 0xaf, 0xd7, 0xd2, 0x8c,
	0xc7, 0x44, 0x48, 0xf7, 0xb7, 0x0a, 0xb4, 0x07, 0xca, 0x45, 0x42, 0x1a, 0x1f, 0x04, 0x0c, 0x7d,
	0x06, 0xaa, 0x52, 0xcc, 0x22, 0xfe, 0x34, 0x28, 0x74, 0xc0, 0x46, 0x61, 0xe4, 0x20, 0x50, 0x7d,
	0xf0, 0x09, 0xac, 0x0b, 0xc9, 0x05, 0x0f, 0xfd, 0x0c, 0xb7, 0x9d, 0xd0, 0x35, 0x70, 0x16, 0x19,
	0xbd, 0x07, 0x2d, 0xa2, 0x69, 0x94, 0x4b, 0xdb, 0x08, 0x4d, 0x05, 0x0c, 0x28, 0x97, 0x36, 0x4a,
	0x24, 0x64, 0x1e, 0x65, 0x75, 0x16, 0x25, 0x12, 0x72, 0x2e, 0x8a, 0xa6, 0xa9, 0x28, 0x35, 0x1b,
	0x45, 0x11, 0x28, 0x97, 0xee, 0x2f, 0x55, 0xe8, 0xfe, 0x64, 0x5a, 0xcb, 0xc3, 0xcf, 0x75, 0x1f,
	0x5f, 0x03, 0xd5, 0x49, 0x99, 0xaa, 0xd9, 0x36, 0xda, 0x33, 0xac, 0x1f, 0x9d, 0xd5, 0xb2, 0x54,
	0xee, 0xb6, 0x9f, 0x72, 0xcb, 0x12, 0x3c, 0xb4, 0x9d, 0x64, 0x48, 0x2a, 0xb5, 0x39, 0xaf, 0xea,
	0x18, 0xd0, 0x92, 0x3e, 0x02, 0x5b, 0x95, 0x05, 0x5f, 0xb2, 0xa1, 0x6c, 0x53, 0xbd, 0x0f, 0x6a,
	0xf5, 0x8c, 0x61, 0x9a, 0xb7, 0xa5, 0x11, 0x3d, 0x7c, 0x0b, 0x3a, 0x45, 0x71, 0x9c, 0x86, 0x16,
	0x78, 0x43, 0x0b, 0x5c, 0xd0, 0xd1, 0x6b, 0x17, 0x84, 0x42, 0xb7, 0xe1, 0xb2, 0x90, 0x3c, 0x3b,
	0x8b, 0xc5, 0xc3, 0x61, 0xec, 0x69, 0x2b, 0x1f, 0x2d, 0x1c, 0x8f, 0xcb, 0x50, 0x27, 0x77, 0x6e,
	0xab, 0xf3, 0xd6, 0xd2, 0xa5, 0xb6, 0x6f, 0xc8, 0x81, 0x06, 0x11, 0x32, 0x90, 0xa9, 0x70, 0xc0,
	0x5c, 0x2d, 0xf6, 0xd5, 0xfd, 0x11, 0x36, 0xed, 0x35, 0x91, 0x0b, 0x51, 0x7a, 0x51, 0xdc, 0x80,
	0x86, 0x5d, 0xcf, 0x59, 0xd1, 0x1b, 0xb8, 0xa8, 0x37, 0x30, 0x2f, 0x9f, 0x97, 0x71, 0xdc, 0x3b,
	0xb0, 0x69, 0xdb, 0xbc, 0x10, 0x77, 0x59, 0xdc, 0xea, 0x82, 0xb8, 0xee, 0x5f, 0x95, 0xbc, 0x25,
	0x04, 0xfb, 0xcf, 0x5a, 0xe2, 0x0a, 0xb4, 0x66, 0x7c, 0xdb, 0x0e, 0x39, 0x70, 0x36, 0x4f, 0x9b,
	0x57, 0xb9, 0x76, 0x9a, 0xca, 0xf5, 0x33, 0xa8, 0xec, 0x3e, 0x58, 0xaa, 0x92, 0xb6, 0x83, 0x59,
	0xa5, 0x2b, 0x25, 0x95, 0x36, 0x55, 0xc9, 0x2b, 0x7d, 0x17, 0x2e, 0xd9, 0x18, 0x43, 0x86, 0xc3,
	0x7f, 0xac, 0xf6, 0x62, 0xdd, 0xdc, 0x87, 0xa5, 0x73, 0x4f, 0xcf, 0x61, 0x51, 0xed, 0x57, 0xd0,
	0xe8, 0x0f, 0x1e, 0xc4, 0x34, 0x3c, 0x46, 0xbb, 0xb0, 0x91, 0x97, 0xc9, 0x17, 0x32, 0xe0, 0xd2,
	0xae, 0xdc, 0x9d, 0x15, 0x6b, 0xa8, 0x50, 0x7b, 0xb8, 0x32, 0x26, 0x4e, 0xa2, 0xc2, 0x95, 0x64,
	0x78, 0xdf, 0x27, 0xba, 0xec, 0x84, 0x30, 0x9f, 0x71, 0x3c, 0x26, 0xaf, 0xac, 0x0f, 0xb5, 0x08,
	0x61, 0x03, 0x0d, 0xb8, 0x11, 0xac, 0xed, 0x63, 0x79, 0xff, 0x45, 0x40, 0xe2, 0xfe, 0x40, 0xed,
	0x7a, 0x49, 0xcb, 0x4a, 0x89, 0x96, 0x0e, 0x34, 0x12, 0x2c, 0x5f, 0x52, 0x7e, 0xac, 0xd7, 0xac,
	0x79, 0xd9, 0x2b, 0xda, 0x82, 0x5a, 0x48, 0xd3, 0x24, 0x73, 0x3c, 0xf3, 0xe2, 0x5e, 0x9d, 0x5b,
	0x45, 0x30, 0xd4, 0x85, 0x15, 0xc2, 0x6c, 0xff, 0xae, 0x10, 0xe6, 0xfe, 0x59, 0x81, 0x8b, 0xcf,
	0x58, 0x4c, 0x83, 0xa8, 0x87, 0xb9, 0x1c, 0x70, 0xf2, 0x03, 0x3e, 0x39, 0x9b, 0x06, 0x59, 0xc2,
	0x98, 0x4b, 0x7f, 0xbc, 0x70, 0x31, 0x2b, 0xf0, 0xa1, 0xc2, 0xd4, 0x85, 0x1a, 0xbe, 0xd6, 0x9c,
	0x90, 0x26, 0x12, 0xdb, 0xfc, 0x3a, 0xde, 0x9a, 0x41, 0x7b, 0x06, 0xb4, 0xb6, 0xcc, 0x38, 0x39,
	0xc6, 0x27, 0x36, 0x5a, 0x6e, 0xcb, 0x06, 0x36, 0xf1, 0xae, 0xc3, 0x46, 0xf8, 0xda, 0xf2, 0xb2,
	0x88, 0x35, 0x1d, 0x71, 0x3d, 0xc3, 0x6d, 0x4c, 0xf7, 0x2b, 0xb8, 0xe8, 0xe1, 0x29, 0x7d, 0x81,
	0xcf, 0xbb, 0x33, 0xf7, 0x0b, 0xd8, 0xd8, 0xc7, 0xf2, 0xdc, 0xd3, 0x7e, 0x5e, 0x9c, 0x26, 0xd8,
	0xd9, 0x8a, 0x74, 0xd6, 0xdd, 0xbb, 0x7f, 0x54, 0x60, 0x63, 0xf1, 0x26, 0x57, 0x4b, 0x8c, 0x38,
	0x66, 0x71, 0x10, 0x1a, 0xbf, 0xd5, 0xa9, 0x35, 0xbd, 0x4e, 0x06, 0x2a, 0x9b, 0x55, 0x3d, 0x3b,
	0x3a, 0x92, 0x92, 0x09, 0x5f, 0x52, 0x5f, 0x3d, 0xe8, 0x44, 0x14, 0x4b, 0xa3, 0x4f, 0xe9, 0x23,
	0x29, 0x99, 0xfa, 0xae, 0x19, 0x85, 0x47, 0x38, 0x3c, 0xf6, 0x49, 0x82, 0xe5, 0x1d, 0x5f, 0xa4,
	0x6c, 0x76, 0x8b, 0x36, 0x3d, 0x64, 0xc6, 0xfa, 0x6a, 0x68, 0x68, 0x46, 0x54, 0x59, 0x46, 0x86,
	0x1b, 0x06, 0xe1, 0x91, 0xc9, 0xbb, 0xe9, 0xb5, 0x0d, 0xd6, 0x53, 0x90, 0xf5, 0x38, 0x12, 0xd2,
	0xc4, 0x4f, 0x79, 0x6c, 0x0d, 0x08, 0x2c, 0xf4, 0x8c, 0xc7, 0xee, 0x9b, 0x0a, 0x34, 0xb3, 0x8f,
	0x0d, 0xeb, 0x56, 0xea, 0x8b, 0x23, 0xaf, 0x72, 0xcb, 0x22, 0xc6, 0xcc, 0x88, 0x1e, 0x94, 0x27,
	0x0c, 0xdb, 0x33, 0xd0, 0xd2, 0xc8, 0xd3, 0x13, 0x86, 0x55, 0x2d, 0xcc, 0xb0, 0x48, 0x47, 0x9a,
	0x61, 0x4e, 0x43, 0x47, 0x83, 0x43, 0x83, 0x59, 0x4f, 0x15, 0x38, 0xe0, 0xe1, 0x91, 0x2d, 0x74,
	0x0e, 0xa0, 0x0f, 0x4c, 0x02, 0xa6, 0x76, 0x85, 0x6c, 0x2d, 0xe2, 0x0e, 0x60, 0x73, 0x98, 0x0a,
	0x86, 0x93, 0xe8, 0x5c, 0x96, 0x55, 0xbc, 0xca, 0x56, 0xe6, 0xaf, 0xb2, 0xeb, 0xd0, 0x3a, 0x38,
	0x79, 0x8a, 0x85, 0x54, 0x91, 0x4c, 0x72, 0xd3, 0x13, 0x89, 0x85, 0x2c, 0x6c, 0xdf, 0x00, 0x7b,
	0xbf, 0xd7, 0xa0, 0xa3, 0x5c, 0xaf, 0x47, 0x93, 0xf1, 0x10, 0xf3, 0x17, 0xe8, 0x4b, 0xe8, 0xd0,
	0xc2, 0xdf, 0x12, 0xda, 0xd2, 0x76, 0xb7, 0xf0, 0x03, 0xb5, 0xbd, 0x6e, 0xd1, 0xec, 0x9f, 0xcd,
	0xbd, 0x80, 0xbe, 0x81, 0xce, 0x04, 0x2f, 0x4d, 0x5c, 0xf8, 0x98, 0xdf, 0x2e, 0x41, 0x05, 0x73,
	0x2f, 0xa0, 0xaf, 0xa1, 0x4b, 0xe7, 0x6e, 0x5f, 0x74, 0xb9, 0xb8, 0x70, 0x5e, 0x99, 0xb2, 0xa5,
	0x1f, 0x40, 0x77, 0x82, 0x4b, 0x26, 0x2f, 0xdd, 0xbb, 0xdb, 0xa5, 0xb8, 0x4e, 0xe0, 0x10, 0xd0,
	0x64, 0xe9, 0x02, 0x40, 0xdb, 0x45, 0xfe, 0xfc, 0xad, 0xb2, 0xfd, 0xd6, 0x31, 0x1d, 0xef, 0xee,
	0x2c, 0x27, 0x6b, 0x96, 0x08, 0x65, 0xfc, 0xdc, 0xa3, 0xb7, 0x97, 0x30, 0x3d, 0xb7, 0x07, 0x5b,
	0xa9, 0xb6, 0x50, 0xad, 0xcc, 0xec, 0xf8, 0x23, 0x47, 0xb3, 0x4b, 0xdc, 0xb5, 0xac, 0x28, 0x3d,
	0xd8, 0xe2, 0xda, 0xad, 0x4a, 0x83, 0x94, 0x18, 0x59, 0x79, 0x90, 0x4d, 0xbb, 0x8b, 0x42, 0x84,
	0x4b, 0x59, 0xd2, 0xf3, 0xd3, 0xcb, 0xe0, 0x4c, 0x5b, 0x31, 0xd7, 0xe0, 0x56, 0x9e, 0xa5, 0xae,
	0x2f, 0xcb, 0xe0, 0x53, 0xa8, 0x4f, 0x75, 0x2f, 0x23, 0xf3, 0x23, 0x30, 0x6b, 0xec, 0x12, 0xf2,
	0xa8, 0xae, 0x3f, 0x29, 0x6e, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x41, 0x77, 0xb8, 0xca, 0x68,
	0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaltConfServClient is the client API for RaltConfServ service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaltConfServClient interface {
	OptRaltGroup(ctx context.Context, in *OptRaltGroupReq, opts ...grpc.CallOption) (*OperResult, error)
	GetRaltGroup(ctx context.Context, in *GetRaltGroupReq, opts ...grpc.CallOption) (*GetRaltGroupRsp, error)
	OptRaltWebsite(ctx context.Context, in *OptRaltWebsiteReq, opts ...grpc.CallOption) (*OperResult, error)
	GetRaltWebsite(ctx context.Context, in *GetRaltWebsiteReq, opts ...grpc.CallOption) (*GetRaltWebsiteRsp, error)
	GetRaltSpecWebsite(ctx context.Context, in *GetRaltSpecWebsiteReq, opts ...grpc.CallOption) (*GetRaltSpecWebsiteRsp, error)
	GetRaltAvailIP(ctx context.Context, in *GetAvailIPReq, opts ...grpc.CallOption) (*GetAvailIPRsp, error)
	UploadRaltCertPriKey(ctx context.Context, in *UploadCertPriKeyReq, opts ...grpc.CallOption) (*OperResult, error)
	RemoveRaltCertPriKey(ctx context.Context, in *RemoveCertPriKeyReq, opts ...grpc.CallOption) (*OperResult, error)
	GetRaltCertPriKey(ctx context.Context, in *GetCertPriKeyReq, opts ...grpc.CallOption) (*GetCertPriKeyRsp, error)
	SuspendWebsite(ctx context.Context, in *SuspendWebsiteReq, opts ...grpc.CallOption) (*OperResult, error)
	MyTest(ctx context.Context, in *MyTestReq, opts ...grpc.CallOption) (*OperResult, error)
}

type raltConfServClient struct {
	cc *grpc.ClientConn
}

func NewRaltConfServClient(cc *grpc.ClientConn) RaltConfServClient {
	return &raltConfServClient{cc}
}

func (c *raltConfServClient) OptRaltGroup(ctx context.Context, in *OptRaltGroupReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/optRaltGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raltConfServClient) GetRaltGroup(ctx context.Context, in *GetRaltGroupReq, opts ...grpc.CallOption) (*GetRaltGroupRsp, error) {
	out := new(GetRaltGroupRsp)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/getRaltGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raltConfServClient) OptRaltWebsite(ctx context.Context, in *OptRaltWebsiteReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/optRaltWebsite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raltConfServClient) GetRaltWebsite(ctx context.Context, in *GetRaltWebsiteReq, opts ...grpc.CallOption) (*GetRaltWebsiteRsp, error) {
	out := new(GetRaltWebsiteRsp)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/getRaltWebsite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raltConfServClient) GetRaltSpecWebsite(ctx context.Context, in *GetRaltSpecWebsiteReq, opts ...grpc.CallOption) (*GetRaltSpecWebsiteRsp, error) {
	out := new(GetRaltSpecWebsiteRsp)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/getRaltSpecWebsite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raltConfServClient) GetRaltAvailIP(ctx context.Context, in *GetAvailIPReq, opts ...grpc.CallOption) (*GetAvailIPRsp, error) {
	out := new(GetAvailIPRsp)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/getRaltAvailIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raltConfServClient) UploadRaltCertPriKey(ctx context.Context, in *UploadCertPriKeyReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/uploadRaltCertPriKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raltConfServClient) RemoveRaltCertPriKey(ctx context.Context, in *RemoveCertPriKeyReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/removeRaltCertPriKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raltConfServClient) GetRaltCertPriKey(ctx context.Context, in *GetCertPriKeyReq, opts ...grpc.CallOption) (*GetCertPriKeyRsp, error) {
	out := new(GetCertPriKeyRsp)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/getRaltCertPriKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raltConfServClient) SuspendWebsite(ctx context.Context, in *SuspendWebsiteReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/suspendWebsite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raltConfServClient) MyTest(ctx context.Context, in *MyTestReq, opts ...grpc.CallOption) (*OperResult, error) {
	out := new(OperResult)
	err := c.cc.Invoke(ctx, "/rcs.RaltConfServ/myTest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RaltConfServServer is the server API for RaltConfServ service.
type RaltConfServServer interface {
	OptRaltGroup(context.Context, *OptRaltGroupReq) (*OperResult, error)
	GetRaltGroup(context.Context, *GetRaltGroupReq) (*GetRaltGroupRsp, error)
	OptRaltWebsite(context.Context, *OptRaltWebsiteReq) (*OperResult, error)
	GetRaltWebsite(context.Context, *GetRaltWebsiteReq) (*GetRaltWebsiteRsp, error)
	GetRaltSpecWebsite(context.Context, *GetRaltSpecWebsiteReq) (*GetRaltSpecWebsiteRsp, error)
	GetRaltAvailIP(context.Context, *GetAvailIPReq) (*GetAvailIPRsp, error)
	UploadRaltCertPriKey(context.Context, *UploadCertPriKeyReq) (*OperResult, error)
	RemoveRaltCertPriKey(context.Context, *RemoveCertPriKeyReq) (*OperResult, error)
	GetRaltCertPriKey(context.Context, *GetCertPriKeyReq) (*GetCertPriKeyRsp, error)
	SuspendWebsite(context.Context, *SuspendWebsiteReq) (*OperResult, error)
	MyTest(context.Context, *MyTestReq) (*OperResult, error)
}

// UnimplementedRaltConfServServer can be embedded to have forward compatible implementations.
type UnimplementedRaltConfServServer struct {
}

func (*UnimplementedRaltConfServServer) OptRaltGroup(ctx context.Context, req *OptRaltGroupReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OptRaltGroup not implemented")
}
func (*UnimplementedRaltConfServServer) GetRaltGroup(ctx context.Context, req *GetRaltGroupReq) (*GetRaltGroupRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRaltGroup not implemented")
}
func (*UnimplementedRaltConfServServer) OptRaltWebsite(ctx context.Context, req *OptRaltWebsiteReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OptRaltWebsite not implemented")
}
func (*UnimplementedRaltConfServServer) GetRaltWebsite(ctx context.Context, req *GetRaltWebsiteReq) (*GetRaltWebsiteRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRaltWebsite not implemented")
}
func (*UnimplementedRaltConfServServer) GetRaltSpecWebsite(ctx context.Context, req *GetRaltSpecWebsiteReq) (*GetRaltSpecWebsiteRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRaltSpecWebsite not implemented")
}
func (*UnimplementedRaltConfServServer) GetRaltAvailIP(ctx context.Context, req *GetAvailIPReq) (*GetAvailIPRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRaltAvailIP not implemented")
}
func (*UnimplementedRaltConfServServer) UploadRaltCertPriKey(ctx context.Context, req *UploadCertPriKeyReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadRaltCertPriKey not implemented")
}
func (*UnimplementedRaltConfServServer) RemoveRaltCertPriKey(ctx context.Context, req *RemoveCertPriKeyReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRaltCertPriKey not implemented")
}
func (*UnimplementedRaltConfServServer) GetRaltCertPriKey(ctx context.Context, req *GetCertPriKeyReq) (*GetCertPriKeyRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRaltCertPriKey not implemented")
}
func (*UnimplementedRaltConfServServer) SuspendWebsite(ctx context.Context, req *SuspendWebsiteReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SuspendWebsite not implemented")
}
func (*UnimplementedRaltConfServServer) MyTest(ctx context.Context, req *MyTestReq) (*OperResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MyTest not implemented")
}

func RegisterRaltConfServServer(s *grpc.Server, srv RaltConfServServer) {
	s.RegisterService(&_RaltConfServ_serviceDesc, srv)
}

func _RaltConfServ_OptRaltGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OptRaltGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).OptRaltGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/OptRaltGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).OptRaltGroup(ctx, req.(*OptRaltGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaltConfServ_GetRaltGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRaltGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).GetRaltGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/GetRaltGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).GetRaltGroup(ctx, req.(*GetRaltGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaltConfServ_OptRaltWebsite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OptRaltWebsiteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).OptRaltWebsite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/OptRaltWebsite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).OptRaltWebsite(ctx, req.(*OptRaltWebsiteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaltConfServ_GetRaltWebsite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRaltWebsiteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).GetRaltWebsite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/GetRaltWebsite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).GetRaltWebsite(ctx, req.(*GetRaltWebsiteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaltConfServ_GetRaltSpecWebsite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRaltSpecWebsiteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).GetRaltSpecWebsite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/GetRaltSpecWebsite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).GetRaltSpecWebsite(ctx, req.(*GetRaltSpecWebsiteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaltConfServ_GetRaltAvailIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAvailIPReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).GetRaltAvailIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/GetRaltAvailIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).GetRaltAvailIP(ctx, req.(*GetAvailIPReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaltConfServ_UploadRaltCertPriKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadCertPriKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).UploadRaltCertPriKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/UploadRaltCertPriKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).UploadRaltCertPriKey(ctx, req.(*UploadCertPriKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaltConfServ_RemoveRaltCertPriKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCertPriKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).RemoveRaltCertPriKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/RemoveRaltCertPriKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).RemoveRaltCertPriKey(ctx, req.(*RemoveCertPriKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaltConfServ_GetRaltCertPriKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCertPriKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).GetRaltCertPriKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/GetRaltCertPriKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).GetRaltCertPriKey(ctx, req.(*GetCertPriKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaltConfServ_SuspendWebsite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SuspendWebsiteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).SuspendWebsite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/SuspendWebsite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).SuspendWebsite(ctx, req.(*SuspendWebsiteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaltConfServ_MyTest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MyTestReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaltConfServServer).MyTest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rcs.RaltConfServ/MyTest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaltConfServServer).MyTest(ctx, req.(*MyTestReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaltConfServ_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rcs.RaltConfServ",
	HandlerType: (*RaltConfServServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "optRaltGroup",
			Handler:    _RaltConfServ_OptRaltGroup_Handler,
		},
		{
			MethodName: "getRaltGroup",
			Handler:    _RaltConfServ_GetRaltGroup_Handler,
		},
		{
			MethodName: "optRaltWebsite",
			Handler:    _RaltConfServ_OptRaltWebsite_Handler,
		},
		{
			MethodName: "getRaltWebsite",
			Handler:    _RaltConfServ_GetRaltWebsite_Handler,
		},
		{
			MethodName: "getRaltSpecWebsite",
			Handler:    _RaltConfServ_GetRaltSpecWebsite_Handler,
		},
		{
			MethodName: "getRaltAvailIP",
			Handler:    _RaltConfServ_GetRaltAvailIP_Handler,
		},
		{
			MethodName: "uploadRaltCertPriKey",
			Handler:    _RaltConfServ_UploadRaltCertPriKey_Handler,
		},
		{
			MethodName: "removeRaltCertPriKey",
			Handler:    _RaltConfServ_RemoveRaltCertPriKey_Handler,
		},
		{
			MethodName: "getRaltCertPriKey",
			Handler:    _RaltConfServ_GetRaltCertPriKey_Handler,
		},
		{
			MethodName: "suspendWebsite",
			Handler:    _RaltConfServ_SuspendWebsite_Handler,
		},
		{
			MethodName: "myTest",
			Handler:    _RaltConfServ_MyTest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ralt_plugin.proto",
}
